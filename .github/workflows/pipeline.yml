name: Soccer Betting Machine

on:
  # Manually run any time
  workflow_dispatch: {}
  # Daily 09:00 UTC (change as you like)
  schedule:
    - cron: "0 9 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 0) Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 2) Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 3) Probe APIs (FBR / Odds API)
      - name: Probe APIs (FBR / Odds API)
        env:
          FBR_API_KEY: ${{ secrets.FBR_API_KEY }}
          THE_ODDS_API_KEY: ${{ secrets.THE_ODDS_API_KEY }}
        run: python scripts/test_endpoints.py

      # 4) Historical backbone (Football-Data.co.uk)
      - name: Fetch Football-Data (historical)
        run: python scripts/fetch_football_data.py

      # 5) (Optional) Merge any exported odds files into data/manual_odds.csv
      #    e.g., if you upload data/fanduel_odds.csv or data/oddsportal_export.csv
      - name: Consolidate odds (optional; builds data/manual_odds.csv)
        run: python scripts/consolidate_odds.py

      # 6) (OPTIONAL) ODDSPORTAL MODULE — SAFE
      #    These steps do NOT scrape. They only:
      #      - print instructions (wrapper)
      #      - test schema of any raw files you dropped into data/oddsportal/raw/
      #      - merge normalized odds to data/oddsportal_export.csv
      #      - re-run consolidate_odds.py to prefer FanDuel, fallback to OddsPortal
      - name: OddsPortal wrapper (no-op in CI; explains local usage)
        run: python scripts/scrape_oddsportal.py

      - name: OddsPortal schema test (optional)
        run: python scripts/test_scraper_schema.py

      - name: OddsPortal merge (optional → data/oddsportal_export.csv)
        run: python scripts/merge_scraped_odds.py

      - name: Consolidate odds (merge FanDuel + OddsPortal → manual_odds.csv)
        run: python scripts/consolidate_odds.py

      # 7) Morning odds for upcoming fixtures
      #    Uses data/manual_odds.csv (FanDuel) if present; else calls The Odds API.
      #    Never fails the build; writes empty file if nothing is available.
      - name: Fetch Odds (API or manual override)
        env:
          THE_ODDS_API_KEY: ${{ secrets.THE_ODDS_API_KEY }}
        run: python scripts/fetch_the_odds_api.py

      # 8) xG primary: FBR (current/last → hybrid)
      - name: Fetch FBR team xG (current/last → hybrid)
        env:
          FBR_API_KEY: ${{ secrets.FBR_API_KEY }}
        run: python scripts/fetch_fbr_team_xg.py

      # 9) soccerdata pulls: FBref team stats (fallback xG), 538 SPI, FD fixtures (7d)
      - name: Fetch via soccerdata (FBref/538/FD)
        run: python scripts/fetch_soccerdata.py

      # 10) Merge FBref xG fallback into hybrid (only where FBR missing)
      - name: Merge FBref xG fallback into hybrid
        run: python scripts/merge_sd_fbref_into_xg.py

      # 11) Bootstrap team priors (GK/set-piece/crowd) from hybrid xG (optional)
      - name: Bootstrap team priors from xG (optional)
        run: python scripts/bootstrap_team_priors.py

      # 12) Preflight: ensure all CSVs exist with headers (avoids EmptyDataError)
      - name: Ensure minimal data files exist
        run: python scripts/ensure_min_files.py

      # 13) Generate matchday templates (injuries/lineups) for next 7 days
      - name: Generate matchday injuries/lineups templates (next 7 days)
        run: python scripts/generate_matchday_templates.py

      # 14) Build "Upcoming 7-day" enriched table
      - name: Build Upcoming 7-day window (enriched)
        run: python scripts/build_upcoming_window.py

      # 15) Enrich raw files (normalize + merge xG/injuries/lineups/refs/stadium)
      - name: Enrich features (normalize + merge xG/injuries/lineups/refs/stadium)
        run: python scripts/enrich_features.py

      # 16) Build final model schema CSVs
      - name: Build HIST & UPCOMING for modeling
        run: python scripts/build_hist_and_upcoming.py

      # 17) Data inventory report (what we have)
      - name: Data inventory report (what we have)
        run: python scripts/data_inventory_report.py

      # 18) (Optional) 7-day predictions (Market+Elo(+xG) + Kelly if odds provided)
      - name: Optional: generate 7-day predictions
        run: python scripts/model_predict.py

      # 19) Upload bundle artifact
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbm-7d-bundle
          path: |
            data/HIST_matches.csv
            data/UPCOMING_fixtures.csv
            data/UPCOMING_7D_enriched.csv
            data/PREDICTIONS_7D.csv
            data/xg_metrics_current.csv
            data/xg_metrics_last.csv
            data/xg_metrics_hybrid.csv
            data/teams_master.csv
            data/api_probe_report.json
            data/oddsportal_export.csv
            data/manual_odds.csv