name: SBM — Data Fetch & Preflight

on:
  workflow_dispatch:
  schedule:
    - cron: "5 */6 * * *"   # every 6 hours

concurrency:
  group: sbm-data-preflight
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  fetch-and-preflight:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', 'audit/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache soccerdata (provider cache)
        uses: actions/cache@v4
        with:
          path: .cache/soccerdata
          key: ${{ runner.os }}-soccerdata-${{ env.FBREF_LEAGUE }}-${{ env.FBREF_SEASON }}
          restore-keys: |
            ${{ runner.os }}-soccerdata-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi
          if [ -f "audit/requirements.txt" ]; then pip install -r audit/requirements.txt; fi
          mkdir -p data reports .cache/soccerdata

      # ---- FETCHERS ----

      - name: Fetch SPI (robust; ci_width)
        run: python connectors/spi_fetch.py

      # Streamlined FBref: fetch -> save per-slice CSVs (retry for transient cancels)
      - name: Fetch FBref slices → data/fbref_slice_*.csv (retry)
        env:
          FBREF_SLICES: ${{ vars.FBREF_SLICES }}  # optional, e.g. "standard,shooting,passing,keepers,goal_shot_creation,misc"
        run: |
          set -e
          for i in 1 2 3; do
            echo "FBref slice fetch attempt $i..."
            python connectors/fbref_fetch_streamlined.py && break
            echo "FBref slice fetch attempt $i failed; sleeping before retry..."
            sleep $((15 * i))
          done

      - name: Fetch Odds + Fixtures (H2H + OU + BTTS + Spreads; two-key fallback)
        env:
          THE_ODDS_API_KEY: ${{ secrets.THE_ODDS_API_KEY }}
          THE_ODDS_API_KEY_BACKUP: ${{ secrets.THE_ODDS_API_KEY_BACKUP }}
        run: python connectors/multi_odds_fetch.py

      - name: Attach API-FOOTBALL IDs to fixtures
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_LEAGUE_IDS: ${{ vars.API_FOOTBALL_LEAGUE_IDS }}
        run: python connectors/api_football_attach_ids.py

      - name: Fetch lineups (availability + experienced starters %)
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        run: python connectors/lineups_fetch.py

      # ---- PRIORS + ENRICH ----

      - name: Build cards/corners priors
        run: python scripts/ref_cards_corners_build.py

      - name: Audit team/league mappings
        run: python scripts/mapping_audit.py

      - name: Enrich features (reads per-slice FBref CSVs)
        run: python scripts/enrich_features.py

      - name: Build rolling form (last5/last10)
        run: python scripts/rolling_form_build.py

      # ---- FEATURES + RISK ----

      - name: Build feature diffs & coherence features
        run: python scripts/feature_patcher.py

      - name: Build extended consistency checks
        run: python scripts/consistency_checks_build.py

      - name: Update Kelly stakes by risk policy
        run: python scripts/kelly_policy_update.py

      # ---- MODEL MATRIX ----

      - name: Build model-ready matrix
        run: python scripts/model_matrix_build.py

      - name: Validate model matrix schema
        run: python scripts/model_matrix_validate.py

      # ---- BRIEFING ----

      - name: Append source alerts to AUTO_BRIEFING.md
        run: |
          mkdir -p reports
          if [ ! -f reports/AUTO_BRIEFING.md ]; then echo "# AUTO BRIEFING" > reports/AUTO_BRIEFING.md; fi
          python scripts/alerts_autobriefing_append.py
          {
            echo "";
            echo "## Odds Key Usage";
            if [ -f reports/ODDS_ALERTS.md ]; then
              echo "";
              echo "**From ODDS_ALERTS.md:**";
              cat reports/ODDS_ALERTS.md;
            else
              echo "- No ODDS_ALERTS.md found this run.";
            fi
          } >> reports/AUTO_BRIEFING.md

      # ---- ARTIFACTS ----

      - name: Upload data & reports
        uses: actions/upload-artifact@v4
        with:
          name: sbm-preflight-artifacts
          path: |
            data/*.csv
            reports/*.md
            reports/*.csv
            reports/*.json